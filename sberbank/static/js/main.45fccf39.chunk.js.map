{"version":3,"sources":["components/ListUsers/index.js","redux/actions.js","redux/actionTypes.js","components/EditorUser/index.js","components/Main/index.js","components/Settings/index.js","redux/reducers/users.js","redux/reducers/settings.js","redux/reducers/index.js","redux/store.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","listUsers","maxWidth","tableHead","fontWeight","rowUser","cursor","connect","state","settings","users","openEditor","classes","activeSettings","filter","setting","isActive","Grid","item","className","Paper","Table","size","TableHead","TableRow","map","code","name","TableCell","key","TableBody","user","hover","id","onClick","format","nextUserId","addUser","type","payload","setSettings","validate","values","errors","firstName","lastName","patronymic","personNumber","position","subdivision","formControl","margin","spacing","minWidth","saveBack","marginTop","saveAdd","positions","subdivisions","initialState","birthday","Date","dispatch","readonly","history","useHistory","formik","useFormik","initialValues","validateOnBlur","validateOnMount","validateOnChange","onSubmit","actions","newValues","useEffect","setValues","container","FormControl","error","InputLabel","htmlFor","Input","value","onChange","handleChange","readOnly","FormHelperText","utils","DateFnsUtils","DatePicker","label","val","setFieldValue","Select","labelId","target","MenuItem","alignItems","Button","submit","handleSubmit","variant","submitGoBack","push","color","useState","opened","setState","isOpen","listItemText","marginRight","localSettings","event","forEach","checked","xs","List","dense","ListItem","ListItemText","primary","ListItemSecondaryAction","Checkbox","action","combineReducers","createStore","rootReducer","menu","display","menuItem","textDecoration","content","flexWrap","App","store","AppBar","MenuList","to","exact","path","component","Main","EditorUser","Settings","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45fccf39.chunk.js","sourcesContent":["import React from \"react\";\nimport {Grid, Table, TableHead, TableRow, TableCell, TableBody, Paper} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { format } from 'date-fns'\n\nconst useStyles = makeStyles(theme => ({\n  listUsers: {\n    maxWidth: 960\n  },\n  tableHead: {\n    fontWeight: '700'\n  },\n  rowUser: {\n    cursor: 'pointer'\n  }\n}));\n\n\nfunction ListUsers({ users, openEditor, settings }) {\n  const classes = useStyles();\n  const activeSettings = settings.filter(setting => setting.isActive);\n  return (\n    <Grid item className={classes.listUsers}>\n      <Paper>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              {activeSettings.map(({code, name}) => (\n                <TableCell key={code} className={classes.tableHead}>{name}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map(user => (\n              <TableRow hover className={classes.rowUser} key={user.id} onClick={() => openEditor(true, user)}>\n                {activeSettings.map(({code}) => (\n                  <TableCell key={code}>{\n                    code === 'birthday'\n                      ? format(user[code], 'dd.MM.yyyy')\n                      : user[code]\n                  }</TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps)(ListUsers);","import {ADD_USER, SET_SETTINGS} from \"./actionTypes\";\n\nlet nextUserId = 4;\n\nexport const addUser = user => ({\n  type: ADD_USER,\n  payload: {\n    id: ++nextUserId,\n    ...user\n  }\n});\n\nexport const setSettings = settings => ({\n  type: SET_SETTINGS,\n  payload: [\n    ...settings\n  ]\n});","export const ADD_USER = 'ADD_USER';\nexport const SET_SETTINGS = 'SET_SETTINGS';","import React, {useEffect} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { useFormik } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { addUser } from \"../../redux/actions\";\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  }\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  }\n  if (!values.patronymic) {\n    errors.patronymic = 'Required';\n  }\n  if (!values.personNumber) {\n    errors.personNumber = 'Required';\n  }\n  if (!values.position) {\n    errors.position = 'Required';\n  }\n  if (!values.subdivision) {\n    errors.subdivision = 'Required';\n  }\n\n  return errors;\n};\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 201,\n  },\n  saveBack: {\n    marginTop: 16,\n  },\n  saveAdd: {\n    marginTop: 16\n  }\n}));\n\nconst positions = [\n  'Менеджер',\n  'СЕО',\n  'Frontend-разработчик',\n  'Backend-разработчик',\n  'Тим-лид',\n];\nconst subdivisions = [\n  'Отдел качества',\n  'Отдел разработки',\n  'Отдел тестирования',\n  'Руководство',\n];\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  patronymic: '',\n  birthday: new Date(),\n  personNumber: '',\n  position: '',\n  subdivision: ''\n};\n\nfunction EditorUser({dispatch, user = initialState, readonly = false}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      ...user\n    },\n    validateOnBlur: false,\n    validateOnMount: false,\n    validateOnChange: false,\n    validate: validate,\n    onSubmit: (values, actions) => {\n      const { lastName } = values;\n      let position = values.position;\n      if (lastName === 'Миняйлов') {\n        position = 'Тим-лид';\n      }\n      const newValues = {...values, position};\n      dispatch(addUser(newValues));\n      //  actions.resetForm(initialState);\n      //  resetForm нужен для сброса значений формы,\n      //  но если использовать с переходом на главную, то прилетает варниг о том что компонент уже размонтирован,\n      //  а что то происходит, просит делать сброс обработчиков.\n    }\n  });\n\n  const submit = (callback) => {\n    callback();\n  };\n  const submitGoBack = (callback) => {\n    callback();\n    if (!formik.errors) {\n      history.push('/');\n    }\n  };\n\n  useEffect(() => {\n    formik.setValues(user);\n  }, [user]);\n\n  return (\n    <Grid item >\n      <form>\n        <Grid container >\n          <FormControl className={classes.formControl} error={!!formik.errors.lastName}>\n            <InputLabel htmlFor=\"lastName\">Фамилия</InputLabel>\n            <Input\n              id=\"lastName\"\n              name=\"lastName\"\n              value={formik.values.lastName}\n              onChange={formik.handleChange}\n              readOnly={readonly}\n            />\n            {formik.errors.lastName && (\n              <FormHelperText id=\"lastName-error-text\">{formik.errors.lastName}</FormHelperText>\n            )}\n          </FormControl>\n          <FormControl className={classes.formControl} error={!!formik.errors.firstName}>\n            <InputLabel htmlFor=\"firstName\">Имя</InputLabel>\n            <Input\n              id=\"firstName\"\n              name=\"firstName\"\n              value={formik.values.firstName}\n              onChange={formik.handleChange}\n              readOnly={readonly}\n            />\n            {formik.errors.firstName && (\n              <FormHelperText id=\"firstName-error-text\">{formik.errors.firstName}</FormHelperText>\n            )}\n          </FormControl>\n          <FormControl className={classes.formControl} error={!!formik.errors.patronymic}>\n            <InputLabel htmlFor=\"patronymic\">Отчество</InputLabel>\n            <Input\n              id=\"patronymic\"\n              name=\"patronymic\"\n              value={formik.values.patronymic}\n              onChange={formik.handleChange}\n              readOnly={readonly}\n            />\n            {formik.errors.patronymic && (\n              <FormHelperText id=\"patronymic-error-text\">{formik.errors.patronymic}</FormHelperText>\n            )}\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                id=\"birthday\"\n                label=\"Дата рождения\"\n                format=\"dd.MM.yyyy\"\n                value={formik.values.birthday}\n                readOnly={readonly}\n                onChange={val => {\n                  formik.setFieldValue('birthday', val);\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </FormControl>\n        </Grid>\n        <Grid container>\n          <FormControl className={classes.formControl} error={!!formik.errors.personNumber}>\n            <InputLabel htmlFor=\"personNumber\">Табельный номер</InputLabel>\n            <Input\n              id=\"personNumber\"\n              type=\"number\"\n              name=\"personNumber\"\n              value={formik.values.personNumber}\n              onChange={formik.handleChange}\n              readOnly={readonly}\n            />\n            {formik.errors.personNumber && (\n              <FormHelperText id=\"personNumber-error-text\">{formik.errors.personNumber}</FormHelperText>\n            )}\n          </FormControl>\n          <FormControl className={classes.formControl} error={!!formik.errors.position}>\n            <InputLabel id=\"position\">Должность</InputLabel>\n            <Select\n              labelId=\"position\"\n              id=\"position\"\n              value={formik.values.position}\n              readOnly={readonly}\n              onChange={item => {\n                formik.setFieldValue('position', item.target.value);\n              }}\n            >\n              {positions.map(name => (\n                <MenuItem key={name} value={name}>{name}</MenuItem>\n              ))}\n            </Select>\n            {formik.errors.position && (\n              <FormHelperText id=\"position-error-text\">{formik.errors.position}</FormHelperText>\n            )}\n          </FormControl>\n          <FormControl className={classes.formControl} error={!!formik.errors.subdivision}>\n            <InputLabel id=\"subdivision\">Подразделение</InputLabel>\n            <Select\n              labelId=\"subdivision\"\n              id=\"subdivision\"\n              value={formik.values.subdivision}\n              readOnly={readonly}\n              onChange={item => {\n                formik.setFieldValue('subdivision', item.target.value);\n              }}\n            >\n              {subdivisions.map(name => (\n                <MenuItem key={name} value={name}>{name}</MenuItem>\n              ))}\n            </Select>\n            {formik.errors.subdivision && (\n              <FormHelperText id=\"subdivision-error-text\">{formik.errors.subdivision}</FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n        {!readonly && (\n          <Grid container spacing={2} alignItems=\"flex-end\">\n            <FormControl className={classes.formControl}>\n              <Button onClick={() => submit(formik.handleSubmit)} variant=\"contained\" size=\"small\" className={classes.saveAdd}>\n                Сохранить и добавить еще\n              </Button>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <Button onClick={() => submitGoBack(formik.handleSubmit)} variant=\"contained\" size=\"small\" color=\"primary\" className={classes.saveBack}>\n                Сохранить и вернуться в список\n              </Button>\n            </FormControl>\n          </Grid>\n        )}\n      </form>\n    </Grid>\n  );\n}\n\nexport default connect()(EditorUser);","import React, { useState } from \"react\";\nimport ListUsers from \"../ListUsers\";\nimport EditorUser from \"../EditorUser\";\nimport { connect } from 'react-redux';\n\nfunction Main({users}) {\n  const [state, setState] = useState({\n    opened: false,\n    user: null\n  });\n  const openEditor = (isOpen, user) => {\n    setState({\n      opened: user !== state.user ? isOpen : !isOpen,\n      user: user !== state.user ? user : null\n    })\n  };\n  return (\n    <>\n      <ListUsers users={users} openEditor={openEditor} />\n      {state.opened && (\n        <EditorUser user={state.user} readonly={true} />\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  users: state.users\n});\nexport default connect(mapStateToProps)(Main);","import React from \"react\";\nimport {Grid, List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { setSettings } from \"../../redux/actions\";\n\nconst useStyles = makeStyles(theme => ({\n  listItemText: {\n    marginRight: '15px'\n  }\n}));\n\nfunction Settings({dispatch, settings}) {\n  const classes = useStyles();\n  const localSettings = [...settings];\n  const handleChange = code => event => {\n    localSettings.forEach(setting => {\n      if (code === setting.code) {\n        setting.isActive = event.target.checked;\n      }\n    });\n    dispatch(setSettings(localSettings));\n  };\n  return (\n    <Grid container item xs={12}>\n      <List dense={true}>\n        {localSettings.map(({code, name, isActive}) => (\n          <ListItem key={code}>\n            <ListItemText\n              primary={name}\n              className={classes.listItemText}\n            />\n            <ListItemSecondaryAction>\n              <Checkbox\n                onChange={handleChange(code)}\n                checked={isActive}\n                color=\"primary\"\n                name={code}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Grid>\n  );\n}\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\nexport default connect(mapStateToProps)(Settings);","import { ADD_USER } from \"../actionTypes\";\n\nconst initialState = [\n  {\n    id: 1,\n    lastName: 'Малкович',\n    firstName: 'Иван',\n    patronymic: 'Сергеевич',\n    birthday: new Date(),\n    personNumber: '1',\n    position: 'Менеджер',\n    subdivision: 'Руководство'\n  },\n  {\n    id: 2,\n    lastName: 'Шестаковский',\n    firstName: 'Сергей',\n    patronymic: 'Петрович',\n    birthday: new Date(),\n    personNumber: '2',\n    position: 'СЕО',\n    subdivision: 'Руководство'\n  },\n  {\n    id: 3,\n    lastName: 'Иванчук',\n    firstName: 'Генадий',\n    patronymic: 'Михайлович',\n    birthday: new Date(),\n    personNumber: '3',\n    position: 'Frontend-разработчик',\n    subdivision: 'Отдел разработки'\n  },\n  {\n    id: 4,\n    lastName: 'Григорович',\n    firstName: 'Евгений',\n    patronymic: 'Васильевич',\n    birthday: new Date(),\n    personNumber: '4',\n    position: 'Backend-разработчик',\n    subdivision: 'Отдел разработки'\n  }\n];\nconst users = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_USER: {\n      return [\n        ...state,\n        {\n          ...action.payload\n        }\n      ];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default users;","import { SET_SETTINGS } from \"../actionTypes\";\n\nconst initialState = [\n  {code: 'lastName', name: 'Фамилия', isActive: true},\n  {code: 'firstName', name: 'Имя', isActive: false},\n  {code: 'patronymic', name: 'Отчество', isActive: false},\n  {code: 'birthday', name: 'Дата рождения', isActive: false},\n  {code: 'personNumber', name: 'Табельный номер', isActive: false},\n  {code: 'position', name: 'Должность', isActive: true},\n  {code: 'subdivision', name: 'Подразделение', isActive: false},\n];\nconst settings = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SETTINGS: {\n      return [\n        ...action.payload\n      ];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default settings;","import { combineReducers } from \"redux\";\nimport users from './users';\nimport settings from './settings';\n\nexport default combineReducers({ users, settings });","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { AppBar, Grid } from \"@material-ui/core\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Main from \"./components/Main\";\nimport EditorUser from \"./components/EditorUser\";\nimport Settings from \"./components/Settings\";\nimport store from \"./redux/store\";\n\nconst useStyles = makeStyles(theme => ({\n  menu: {\n    display: 'flex'\n  },\n  menuItem: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  content: {\n    flexWrap: 'nowrap'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <AppBar position=\"relative\">\n            <MenuList className={classes.menu}>\n              <MenuItem><Link to=\"/\" className={classes.menuItem}>Список сотрудников</Link></MenuItem>\n              <MenuItem><Link to=\"/user/add\" className={classes.menuItem}>Добавить запись</Link></MenuItem>\n              <MenuItem><Link to=\"/settings\" className={classes.menuItem}>Настройки</Link></MenuItem>\n            </MenuList>\n          </AppBar>\n          <Grid container spacing={2} className={classes.content}>\n            <Route exact path=\"/\" component={Main} />\n            <Route path=\"/user/add\" component={EditorUser} />\n            <Route path=\"/settings\" component={Settings} />\n          </Grid>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}