{"version":3,"sources":["components lazy /^/.*$/ groupOptions: {} namespace object","application/elements/index.tsx","App.tsx","stores/index.tsx","stores/megaStore.tsx","index.tsx","components/constructorArea.tsx","Constants.tsx"],"names":["map","./Contents/Content1","./Contents/Content1.tsx","./Contents/Form1","./Contents/Form1.tsx","./Contents/Map1","./Contents/Map1.tsx","./Footers/Footer1","./Footers/Footer1.tsx","./Footers/Footer2","./Footers/Footer2.tsx","./Headers/Header1","./Headers/Header1.tsx","./Headers/Header2","./Headers/Header2.tsx","./Navbars/Nav1","./Navbars/Nav1.tsx","./Sliders/Slider1","./Sliders/Slider1.tsx","./constructorArea","./constructorArea.tsx","webpackAsyncContext","req","ids","Promise","all","slice","__webpack_require__","e","then","id","resolve","Error","code","keys","Object","module","exports","elementSource","beginDrag","props","objectSpread","endDrag","monitor","component","console","log","Element","DragSource","ItemTypes","ELEMENT","connect","connectDragSource","dragSource","isDragging","this","title","react","className","style","opacity","cursor","React","App","inject","observer","clearStorage","localStorage","removeItem","_this","megaStore","elements","_this2","react_default","a","createElement","application_elements","dataComponent","dataName","onClick","constructorArea","Component","stores","megaStore_class","MegaStore","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","name","ReactDOM","render","index_module","cjs","backend","HTML5Backend","src_App_0","mobx_react_devtools_default","document","getElementById","squareTarget","drop","newItem","getItem","push","setItem","JSON","stringify","ConstructorArea","DropTarget","connectDropTarget","dropTarget","isOver","length","parse","react__WEBPACK_IMPORTED_MODULE_5__","item","i","OtherComponent","key","fallback","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.33607fee.chunk.js","sourcesContent":["var map = {\n\t\"./Contents/Content1\": [\n\t\t54,\n\t\t1\n\t],\n\t\"./Contents/Content1.tsx\": [\n\t\t54,\n\t\t1\n\t],\n\t\"./Contents/Form1\": [\n\t\t55,\n\t\t2\n\t],\n\t\"./Contents/Form1.tsx\": [\n\t\t55,\n\t\t2\n\t],\n\t\"./Contents/Map1\": [\n\t\t56,\n\t\t3\n\t],\n\t\"./Contents/Map1.tsx\": [\n\t\t56,\n\t\t3\n\t],\n\t\"./Footers/Footer1\": [\n\t\t57,\n\t\t4\n\t],\n\t\"./Footers/Footer1.tsx\": [\n\t\t57,\n\t\t4\n\t],\n\t\"./Footers/Footer2\": [\n\t\t58,\n\t\t5\n\t],\n\t\"./Footers/Footer2.tsx\": [\n\t\t58,\n\t\t5\n\t],\n\t\"./Headers/Header1\": [\n\t\t59,\n\t\t0\n\t],\n\t\"./Headers/Header1.tsx\": [\n\t\t59,\n\t\t0\n\t],\n\t\"./Headers/Header2\": [\n\t\t60,\n\t\t6\n\t],\n\t\"./Headers/Header2.tsx\": [\n\t\t60,\n\t\t6\n\t],\n\t\"./Navbars/Nav1\": [\n\t\t53,\n\t\t7\n\t],\n\t\"./Navbars/Nav1.tsx\": [\n\t\t53,\n\t\t7\n\t],\n\t\"./Sliders/Slider1\": [\n\t\t61,\n\t\t8\n\t],\n\t\"./Sliders/Slider1.tsx\": [\n\t\t61,\n\t\t8\n\t],\n\t\"./constructorArea\": [\n\t\t20\n\t],\n\t\"./constructorArea.tsx\": [\n\t\t20\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 114;\nmodule.exports = webpackAsyncContext;","import * as React from 'react';\r\nimport { ItemTypes } from '../../Constants';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nconst elementSource = {\r\n  beginDrag(props:any) {\r\n    return {...props}\r\n  },\r\n  endDrag(props: any,monitor: any,component: any) {\r\n    console.log(component);\r\n    return {...component.props}\r\n  }\r\n}\r\n\r\nfunction collect(connect: any, monitor: any) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging(),\r\n  }\r\n}\r\n\r\ninterface IElementsProps {\r\n  connectDragSource?(elem:any): any;\r\n  isDragging?: boolean;\r\n  title: string;\r\n  dataComponent: string;\r\n  dataName: string;\r\n}\r\n\r\n@DragSource(ItemTypes.ELEMENT, elementSource, collect)\r\nclass Element extends React.Component<IElementsProps, any> {\r\n  \r\n  render() {\r\n    const connectDragSource = this.props.connectDragSource!;\r\n    let isDragging = this.props.isDragging!;\r\n    const { title } = this.props;\r\n    return connectDragSource(\r\n        <div \r\n          className=\"element-list\"\r\n          style={{\r\n            opacity: isDragging ? 0.5 : 1,\r\n            cursor: 'move',\r\n          }}\r\n          >{title}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Element;","import React, { Component, Props } from 'react';\nimport './App.css';\nimport ConstructorArea from './components/constructorArea';\nimport Element from './application/elements';\nimport {observer, inject} from 'mobx-react';\nimport { IMegaStore } from './stores/megaStore';\n\n@inject(\"megaStore\")\n@observer\nclass App extends Component<{\n  megaStore?: IMegaStore;\n}> {\n  clearStorage = () => {\n    localStorage.removeItem('elements');\n    this.props.megaStore!.elements = [];\n  }\n  render() {\n    return (\n      <div className=\"App page-main container-fluid\">\n        <div className=\"elements-list\">\n          <Element title=\"Слайдер 1\" dataComponent=\"Sliders\" dataName=\"Slider1\" />\n          <Element title=\"Блок с товарами\" dataComponent=\"Contents\" dataName=\"Content1\" />\n          <Element title=\"Форма 1\" dataComponent=\"Contents\" dataName=\"Form1\" />\n          <Element title=\"Шапка 1\" dataComponent=\"Headers\" dataName=\"Header1\" />\n          <Element title=\"Шапка 2\" dataComponent=\"Headers\" dataName=\"Header2\" />\n          <Element title=\"Подвал 1\" dataComponent=\"Footers\" dataName=\"Footer1\" />\n          <Element title=\"Подвал 2\" dataComponent=\"Footers\" dataName=\"Footer2\" />\n          <Element title=\"Карта 1\" dataComponent=\"Contents\" dataName=\"Map1\" />\n          \n          <button className=\"btn btn-danger\" onClick={()=>this.clearStorage()}>Сбросить</button>\n          \n        </div>\n        <div className=\"constructor-area\">\n          <ConstructorArea />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {MegaStore} from './megaStore';\r\nexport const stores = {\r\n    megaStore: new MegaStore()\r\n}","import {observable} from 'mobx';\r\n\r\nexport interface IMegaStore {\r\n    products: {name: string}[];\r\n    elements: {title: string, dataName:string, dataComponent: string}[];\r\n}\r\n\r\nexport class MegaStore implements IMegaStore {\r\n    @observable\r\n    products = [\r\n        {name: \"Заголовок 1\"},\r\n        {name: \"Заголовок 2\"},\r\n        {name: \"Заголовок 3\"},\r\n        {name: \"Заголовок 4\"},\r\n    ];\r\n\r\n    @observable\r\n    elements = [];\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MobxReactDevtools from 'mobx-react-devtools';\nimport {Provider} from 'mobx-react';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport {stores} from './stores';\n\nReactDOM.render(<Provider {...stores}><DragDropContextProvider backend={HTML5Backend}><App /><MobxReactDevtools /></DragDropContextProvider></Provider>, document.getElementById('root'));","import * as React from 'react';\r\nimport { Suspense} from 'react';\r\nimport {DropTarget, DropTargetMonitor} from 'react-dnd';\r\nimport { ItemTypes } from '../Constants';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { IMegaStore } from '../stores/megaStore';\r\n\r\ninterface IConstructorAreaProps {\r\n    connectDropTarget?(elem:any): any;\r\n    newItem?: {title: string, dataName:string, dataComponent: string}\r\n    isOver?: boolean;\r\n    squareTarget?: any;\r\n    megaStore?: IMegaStore;\r\n}\r\nconst squareTarget = {\r\n    drop(props: any,monitor:any, component:any) {\r\n      const newItem = monitor.getItem();\r\n      let {elements} = props.megaStore!;\r\n      elements.push(newItem);\r\n      localStorage.setItem('elements',JSON.stringify(elements));\r\n      return newItem;\r\n    },\r\n}\r\nfunction collect(connect: any, monitor: any) {\r\n    \r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n    }\r\n}\r\n@inject('megaStore')\r\n@DropTarget(ItemTypes.ELEMENT, squareTarget, collect)\r\n@observer\r\nclass ConstructorArea extends React.Component<IConstructorAreaProps, any> {\r\n\r\n  render() {\r\n    const connectDropTarget = this.props.connectDropTarget!\r\n    let {elements} = this.props.megaStore!;\r\n    if (elements.length === 0 && localStorage.getItem('elements')) {\r\n      elements = JSON.parse(localStorage.getItem('elements')!);\r\n    }\r\n    return connectDropTarget(\r\n      <div className=\"ctr-area-inner\">\r\n        \r\n        {elements.length > 0 &&\r\n          elements.map((item,i)=>{\r\n          const OtherComponent = React.lazy(() => import('./'+item.dataComponent+'/'+item.dataName));\r\n          return <Suspense key={i} fallback={<div>Loading...</div>}><OtherComponent /></Suspense>;\r\n        })}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConstructorArea;\r\n","export const ItemTypes = {\r\n    ELEMENT: 'element',\r\n}"],"sourceRoot":""}