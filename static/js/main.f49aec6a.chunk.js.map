{"version":3,"sources":["images/arrow.svg","images/wheel-min-def.svg","images/wheel-min-win.svg","components/wheel/index.jsx","components/arrow/index.jsx","components/button/index.jsx","components/winner/index.jsx","WheelFortuneApp.js","index.js"],"names":["module","exports","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","Wheel","maxValue","dataSet","state","sectors","generateWheel","container","innerHTML","value","i","wrapSectors","document","createElement","color","props","randColor","push","text","classList","add","appendChild","reduce","prev","curr","addPart","data","angle","addSector","startAngle","collapse","sectorDeg","skewDeg","rotateDeg","sector","style","backgroundColor","transform","querySelector","this","Number","setState","nextProps","sectorsCount","className","onClick","spin","React","Component","Arrow","src","arrow","alt","SpinButton","clickHandler","title","Winner","tokens","winnerNumber","titleBtn","defSVG","WheelFortuneApp","speed","brakeSpeed","undefined","inputValue","winner","spinned","randNum","min","max","check","Math","random","round","calcHorde","e","target","move","winSectorNum","ceil","setTimeout","type","onChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f49aec6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.11803af2.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheel-min-def.403f479e.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheel-min-win.7c07e0d6.svg\";","import React from 'react';\nimport './index.scss';\n\nconst requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nclass Wheel extends React.Component {\n\n  maxValue = 25;\n  dataSet = [];\n  \n\tstate = {\n\t\tsectors: 0\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.maxValue = 25;\n\t\tthis.container = document.querySelector('.container');\n    const sectors  = Number(this.props.sectors);\n    \n    window.requestAnimationFrame = requestAnimationFrame;\n\n\t\tthis.setState({\n\t\t\tsectors\n\t\t}, this.generateWheel);\n\t};\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { sectors } = this.state;\n\t\tconst sectorsCount  = Number(nextProps.sectors);\n\t\tif (sectors !== sectorsCount) {\n\t\t\tthis.setState({\n\t\t\t\tsectors: sectorsCount\n\t\t\t}, this.generateWheel);\n\t\t}\n\t};\n\n\tgenerateWheel = () => {\n\t\tconst { sectors } = this.state;\n\t\tif (!sectors) {\n\t\t\treturn;\n\t\t}\n\t\tthis.container.innerHTML = '';\n\t\tthis.dataSet = [];\n\t\tconst value = 100/sectors;\n\t\tfor (let i = 1; i <= sectors; i++) {\n\t\t\tconst wrapSectors = document.createElement('div');\n\t\t\tconst color = this.props.randColor();\n\t\t\tthis.dataSet.push({value, color, text: i});\n\t\t\tif (sectors < 4) {\n\t\t\t\twrapSectors.classList.add('wrap-sectors');\n\t\t\t\twrapSectors.classList.add('sectors' + i);\n\t\t\t\tthis.container.appendChild(wrapSectors);\n\t\t\t}\n\t\t}\n\t\tthis.dataSet.reduce((prev, curr) => {\n\t\t\treturn this.addPart(curr, prev);\n\t\t}, 0);\n\t};\n\n\taddPart = (data, angle) => {\n\t\tif (data.value <= this.maxValue) {\n\t\t\treturn this.addSector(data, angle, false);\n\t\t}\n\t\t\n\t\treturn this.addPart({\n\t\t\tvalue: data.value - this.maxValue,\n\t\t\tcolor: data.color,\n\t\t\ttext: data.text\n\t\t}, this.addSector({\n\t\t\tvalue: this.maxValue,\n\t\t\tcolor: data.color,\n\t\t\ttext: data.text,\n\t\t}, angle, true));\n\t};\n\n\taddSector = (data, startAngle, collapse) => {\n\t\tconst { sectors } = this.state;\n\t\tlet sectorDeg = 3.6 * data.value;\n\t\tlet skewDeg = 90 + sectorDeg;\n\t\tlet rotateDeg = startAngle;\n\t\tif (collapse) {\n\t\t\tskewDeg++;\n\t\t}\n\t\n\t\tconst sector = document.createElement('div');\n\t\tsector.classList.add('sector', 'sector' + data.text);\n\t\tsector.style.backgroundColor = data.color;\n\t\tsector.style.transform = 'rotate(' + rotateDeg + 'deg) skewY(' + skewDeg + 'deg)';\n\t\tif (sectors > 3) {\n\t\t\tthis.container.appendChild(sector);\n\t\t} else {\n\t\t\tthis.container.querySelector('.sectors'+data.text).appendChild(sector);\n\t\t}\n\t\treturn startAngle + sectorDeg;\n\t};\n\t\n  render() {\n    return (\n      <div className=\"wheel\">\n        <div className=\"wheel-in\">\n          <div className=\"center-shadow\" />\n          <div className=\"container\" onClick={this.spin}></div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Wheel;","import React from 'react';\nimport './index.scss';\nimport arrow from '../../images/arrow.svg';\n\nfunction Arrow() {\n  return (\n    <img className=\"arrow\" src={arrow} alt=\"arrow\"/>\n  );\n}\n\nexport default Arrow;","import React from 'react';\nimport './index.scss';\n\nfunction SpinButton({clickHandler, title}) {\n  return (\n    <button className=\"spin-button\" onClick={clickHandler}>{title}</button>\n  );\n}\n\nexport default SpinButton;","import React from 'react';\nimport './index.scss';\nimport defSVG from '../../images/wheel-min-def.svg';\nimport winSVG from '../../images/wheel-min-win.svg';\n\nimport Button from '../button';\n\nfunction Winner({clickHandler, tokens, winnerNumber}) {\n  const titleBtn = `Spin as well! (${tokens} tokens)`;\n  return(\n    <div className=\"winner\">\n      <div className=\"left-col\">\n        <div className=\"wheel-min\">\n          <img src={defSVG} />\n        </div>\n      </div>\n      <div className=\"right-col\">\n        <div className=\"right-col__title\">Wheel of Fortune: hugoboss spinned {winnerNumber}!</div>\n        <div className=\"right-col__prize\">Prize: Sexy dance and spread pussy</div>\n        {(tokens > 0) && \n          <div className=\"right-col__button\">\n            <Button clickHandler={clickHandler} title={titleBtn} />\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Winner;","import React from 'react';\nimport './styles/main.scss';\nimport Wheel from './components/wheel';\nimport Arrow from './components/arrow';\nimport Button from './components/button';\nimport Winner from './components/winner';\n\nexport default class WheelFortuneApp extends React.Component {\n\n  angle = 0;\n  speed = 0;\n  brakeSpeed = -0.15;\n  container = undefined;\n  \n  state = {\n    inputValue: 0,\n    winner: false,\n    winnerNumber: 0,\n    spinned: false,\n    tokens: 3\n  }\n\n  componentDidMount() {\n    this.container = document.querySelector('.container');\n  }\n\n  randNum = (min, max, check) => {\n\t\tif(!check)\n\t\t\treturn Math.round(Math.random() * (max - min) + min);\n\t\telse\n\t\t\treturn Math.random() * (max - min) + min;\n  };\n  \n\trandColor = () => {\n\t\tvar r = this.randNum(0,255);\n\t\tvar g = this.randNum(0,255);\n\t\tvar b = this.randNum(0,255);\n\t\treturn \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n  };\n\n  calcHorde = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  };\n\n  move = () => {\n    const { inputValue } = this.state;\n\t\tif (this.speed === 0) {\n      return false;\n    }\n\t\tthis.angle = (this.angle+this.speed)%360;\n\t\tthis.speed = ((this.speed - this.brakeSpeed) > 0) ? this.speed + this.brakeSpeed : 0;\n\t\tthis.container.style.transform = 'rotate('+this.angle+'deg)';\n\t\tif (this.speed  === 0){\n      const winSectorNum = (inputValue - Math.ceil(this.angle/(360/inputValue))) + 1;\n      this.setState({\n        spinned: false,\n        winner: true,\n        winnerNumber: winSectorNum\n      })\n    }\n    setTimeout(requestAnimationFrame(this.move),1000/60);\n\t};\n\n\tspin = () => {\n    const { tokens, spinned } = this.state;\n    if (!spinned && tokens > 0) {\n      this.setState({\n        tokens: tokens - 1,\n        spinned: true,\n        winner: false\n      }, () => {\n        this.speed = this.randNum(20, 50, false);\n        this.move();\n      });\n    }\n\t};\n\n  render(){\n    const { winner, tokens, spinned, winnerNumber } = this.state;\n    return(\n      <>\n        <div className=\"wheel-fortune\">\n          <div className=\"wheel-fortune-inner\">\n            <Arrow />\n            <Wheel sectors={this.state.inputValue} randColor={this.randColor} />\n            {(!spinned && !winner) && (\n              <>\n                <div className=\"row row__input\">\n                  <input type=\"number\" value={this.state.inputValue} min={0} onChange={this.calcHorde} />\n                </div>\n                <div className=\"row row__button\">\n                  <Button clickHandler={this.spin} title=\"Spin\" />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        {winner && \n          <Winner clickHandler={this.spin} tokens={tokens} winnerNumber={winnerNumber} />\n        }\n      </>\n    )\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WheelFortuneApp from './WheelFortuneApp';\n\nReactDOM.render(<WheelFortuneApp />, document.getElementById('root'));"],"sourceRoot":""}